name: Java CI with Maven and Auto Tagging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  CI:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        R2DBC_URL: ${{ secrets.R2DBC_URL }}
        R2DBC_USERNAME: ${{ secrets.R2DBC_USERNAME }}
        R2DBC_PASSWORD: ${{ secrets.R2DBC_PASSWORD }}
        JDBC_URL: ${{ secrets.JDBC_URL }}
        JDBC_USERNAME: ${{ secrets.JDBC_USERNAME }}
        JDBC_PASSWORD: ${{ secrets.JDBC_PASSWORD }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
        SWAGGER_URL: ${{ secrets.SWAGGER_URL }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch
        initial_version: '1.0.0' # Sets the initial version if no tags exist
        release_branches: main  # Ensures tags are only pushed on the main branch

    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: application
        path: target/*.jar

  CD:
    needs: [CI]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: application
        path: target/

    - name: Deploy to Azure VM
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.AWS_VM_HOST }}
        username: ${{ secrets.AWS_VM_USERNAME }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        port: ${{ secrets.AWS_VM_PORT }}
        source: "target/*.jar"
        target: "/home/gogood/java-app"

    - name: Move Java App to File Gogood
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_VM_HOST }}
        username: ${{ secrets.AWS_VM_USERNAME }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        port: ${{ secrets.AWS_VM_PORT }}
        script: |
          # Remover o JAR antigo se existir
          sudo rm -f /home/gogood/gogood-jar/gogood-api-0.0.1-SNAPSHOT.jar
          # Mover o novo JAR para o diretório correto
          sudo mv /home/gogood/java-app/target/gogood-api-0.0.1-SNAPSHOT.jar /home/gogood/gogood-jar/
          # Certificar que o novo JAR tem permissões corretas
          sudo chmod +x /home/gogood/gogood-jar/gogood-api-0.0.1-SNAPSHOT.jar
          # Carregar variáveis de ambiente do arquivo .env
          set -a
          source /home/gogood/gogood-jar/.env
          set +a
          # Iniciar a aplicação
          nohup sudo java -jar /home/gogood/gogood-jar/gogood-api-0.0.1-SNAPSHOT.jar > /home/gogood/gogood-jar/app.log 2>&1 &
